//List Operations
data List a = Cons a (List a) | ListTail;;

infixl "::" "cons_list" ~10;;

fun cons_list.a.b [b : [type <- "List"]] = Cons.a.b;;
fun cons_list.a.b = Cons.a.(Cons.b.ListTail);;

fun head.l [l : [type <- "List"]] = l!arg0;;
fun tail.l [l : [type <- "List"]] = l!arg1;;

var headv [arg0 : [type <- "List"]] = #!arg0!arg0;;
var tailv [arg0 : [type <- "List"]] = #!arg0!arg1;;

%%

head.(Cons.4.(Cons.5.ListTail));;
headv @ [arg0 <- Cons.4.(Cons.5.ListTail)];;
head.(1::2);;
head.(tail.(1::2));;
