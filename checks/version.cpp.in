#ifdef __GNUC__

  #ifdef __clang__

    #if !__has_feature(cxx_constexpr)
      #error Clang does not support constexpr
    #endif

    #if !__has_feature(cxx_decltype)
      #error Clang does not support decltype
    #endif

    #if !__has_feature(cxx_deleted_functions)
      #error Clang does not support deleted functions
    #endif

    #if !__has_feature(cxx_generalized_initializers)
      #error Clang does not support generalized initializers
    #endif

    #if !__has_feature(cxx_lambdas)
      #error Clang does not support lambdas
    #endif

    #if !__has_feature(cxx_nullptr)
      #error Clang does not support nullptr
    #endif

    #if !__has_feature(cxx_range_for)
      #error Clang does not support range based for loops
    #endif

    #if !__has_feature(cxx_raw_string_literals)
      #error Clang does not support raw string literals
    #endif

    #if !__has_feature(cxx_rvalue_references)
      #error Clang does not support rvalue references
    #endif

    #if !__has_feature(cxx_auto_type)
      #error Clang does not support auto as a type
    #endif

    #if !__has_feature(cxx_trailing_return)
      #error Clang does not support trailing return types
    #endif

    #if !__has_feature(cxx_unicode_literals)
      #error Clang does not support unicode literals
    #endif

    #if !__has_feature(cxx_variadic_templates)
      #error Clang does not support variadic templates
    #endif

    #if !__has_feature(cxx_user_literals)
      #error Clang does not support user-defined literals
    #endif

  #else

    #if __GNUC__ < REQUIRED_MAJOR
      #error
    #endif

    #if __GNUC_MINOR__ < REQUIRED_MINOR
      #error
    #endif

  #endif

#endif

int main()
{ return 0; }
